<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNewRowText" xml:space="preserve">
    <value>Klicken Sie hier, um eine neue Zeile hinzuzufügen</value>
  </data>
  <data name="ChooseColumn" xml:space="preserve">
    <value>Spalte auswählen</value>
  </data>
  <data name="ColumnChooser_Cancel" xml:space="preserve">
    <value>Stornieren</value>
  </data>
  <data name="ColumnChooser_OK" xml:space="preserve">
    <value>okay</value>
  </data>
  <data name="FilterControl_After" xml:space="preserve">
    <value>Nach</value>
  </data>
  <data name="FilterControl_AfterOrEqual" xml:space="preserve">
    <value>Nach oder gleich</value>
  </data>
  <data name="FilterControl_And" xml:space="preserve">
    <value>Und</value>
  </data>
  <data name="FilterControl_Before" xml:space="preserve">
    <value>Vor</value>
  </data>
  <data name="FilterControl_BeforeOrEqual" xml:space="preserve">
    <value>Vorher oder Gleich</value>
  </data>
  <data name="FilterControl_BeginsWith" xml:space="preserve">
    <value>Beginnt mit</value>
  </data>
  <data name="FilterControl_Blanks" xml:space="preserve">
    <value>(Leerzeichen)</value>
  </data>
  <data name="FilterControl_Cancel" xml:space="preserve">
    <value>Stornieren</value>
  </data>
  <data name="FilterControl_ClearFilter" xml:space="preserve">
    <value>Filter löschen</value>
  </data>
  <data name="FilterControl_Contains" xml:space="preserve">
    <value>Enthält</value>
  </data>
  <data name="FilterControl_DateFilter" xml:space="preserve">
    <value>Datumsfilter</value>
  </data>
  <data name="FilterControl_DateSortAscending" xml:space="preserve">
    <value>Sortiere Älteste nach Neueste</value>
  </data>
  <data name="FilterControl_DateSortDescending" xml:space="preserve">
    <value>Sortieren Sie Neueste nach Älteste</value>
  </data>
  <data name="FilterControl_DoesNotContain" xml:space="preserve">
    <value>Beinhaltet nicht</value>
  </data>
  <data name="FilterControl_Done" xml:space="preserve">
    <value>Getan</value>
  </data>
  <data name="FilterControl_Empty" xml:space="preserve">
    <value>Leeren</value>
  </data>
  <data name="FilterControl_EndsWith" xml:space="preserve">
    <value>Endet mit</value>
  </data>
  <data name="FilterControl_EnterValidFilterValue" xml:space="preserve">
    <value>Geben Sie einen gültigen Filterwert ein</value>
  </data>
  <data name="FilterControl_Equals" xml:space="preserve">
    <value>Gleich</value>
  </data>
  <data name="FilterControl_FilterDescription" xml:space="preserve">
    <value>Zeile auswählen, in der:</value>
  </data>
  <data name="FilterControl_GreaterThan" xml:space="preserve">
    <value>Größer als</value>
  </data>
  <data name="FilterControl_GreaterThanorEqual" xml:space="preserve">
    <value>Größer als oder gleich</value>
  </data>
  <data name="FilterControl_LessThan" xml:space="preserve">
    <value>Weniger als</value>
  </data>
  <data name="FilterControl_LessThanorEqual" xml:space="preserve">
    <value>Weniger als oder gleich</value>
  </data>
  <data name="FilterControl_NoItems" xml:space="preserve">
    <value>Keine Gegenstände</value>
  </data>
  <data name="FilterControl_NoMatch" xml:space="preserve">
    <value>Keine Treffer</value>
  </data>
  <data name="FilterControl_NotEmpty" xml:space="preserve">
    <value>Nicht leer</value>
  </data>
  <data name="FilterControl_NotEquals" xml:space="preserve">
    <value>Nicht gleich</value>
  </data>
  <data name="FilterControl_NotNull" xml:space="preserve">
    <value>Nicht null</value>
  </data>
  <data name="FilterControl_Null" xml:space="preserve">
    <value>Null</value>
  </data>
  <data name="FilterControl_NumberFilter" xml:space="preserve">
    <value>Zahlenfilter</value>
  </data>
  <data name="FilterControl_NumberSortAscending" xml:space="preserve">
    <value>Kleinste bis größte sortieren</value>
  </data>
  <data name="FilterControl_NumberSortDescending" xml:space="preserve">
    <value>Vom größten zum kleinsten sortieren</value>
  </data>
  <data name="FilterControl_Ok" xml:space="preserve">
    <value>okay</value>
  </data>
  <data name="FilterControl_Or" xml:space="preserve">
    <value>Oder</value>
  </data>
  <data name="FilterControl_SelectAll" xml:space="preserve">
    <value>(Wählen Sie Alle)</value>
  </data>
  <data name="FilterControl_TextFilter" xml:space="preserve">
    <value>Textfilter</value>
  </data>
  <data name="FilterControl_TextSortAscending" xml:space="preserve">
    <value>Sortieren von A bis Z.</value>
  </data>
  <data name="FilterControl_TextSortDescending" xml:space="preserve">
    <value>Sortieren Sie Z nach A</value>
  </data>
  <data name="GroupPanel_GroupDropAreaText" xml:space="preserve">
    <value>Ziehen Sie eine Spalte in eine Gruppe</value>
  </data>
  <data name="INotifyDataErrorInfo_DefaultErrorMessage" xml:space="preserve">
    <value>Zeile mit Fehler</value>
    <comment>Only for INotifyDataErrorInfo error for a row. Error message can be changed using the RowValidating event.</comment>
  </data>
  <data name="SfDataPager_PageCount" xml:space="preserve">
    <value>von</value>
  </data>
  <data name="SfDataPager_PageDescription" xml:space="preserve">
    <value>Seite</value>
  </data>
</root>